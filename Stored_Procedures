STORED PROCEDURES

--Hannah Gavin
/* Stored Procedure #1: Creates a new coach for an existing team */
CREATE PROCEDURE uspNewCoach
@CoachFName VARCHAR (60),
@CoachLName VARCHAR (60),
@BirthDate DATE,
@CoachTypeName VARCHAR (60),
@TeamName VARCHAR (60)

AS
DECLARE @CID  INT *coach ID
DELCARE @CoachTypeID
DECLARE @TID *Team ID

SET @CID = (SELECT CoachID
FROM COACH
        WHERE CoachFname = @CoachFName
        AND CoachLname = @CoachLName)
SET @CoachTypeID = (SELECT CoachTypeID
                FROM COACH_TYPE
            WHERE CoachTypeName = @CoachTypeName)
SET @TID = (SELECT TeamID
        FROM TEAM
        WHERE TeamName = @TeamName)
BEGIN TRAN T1
INSERT INTO COACH(CoachID, CoachFname, CoachLname, BirthDate, DateAssigned, CoachTypeID, TeamID)
VALUES (@CID, @CoachID, @TID)
IF @@ERROR <> 0
    ROLLBACK TRAN T1
ELSE
    COMMIT TRAN T1
GO

EXEC dbo.uspNewCoach
@CoachFName = 'Chris'
@CoachLName = 'Peterson'
@BirthDate = '10/13/1964'
@DateAssigned = '12/01/2013
GO

/* Stored Procedure #2: Creates a new college and inserts it into the college table */
CREATE PROCEDURE NewCollege
@CollegeName VARCHAR (60),
@CollegeDivName (60),
@SportName VARCHAR (30),
@TeamName VARCHAR (50),
@RegionName VARCHAR (40)

AS

DECLARE @CID INT *College ID
DECLARE @CDIV INT *College Division
DELCARE @Sid *Sport ID
DELCARE @TID *Team ID
DECLARE @RID *RegionID

SET @CID = (SELECT College ID
        FROM COLLEGE
        WHERE CollegeName = @CollegeName)
SET @CDIV =(SELECT CollegeDivisionID
        FROM COLLEGE_DIVISION
        WHERE DivisionName = @CollegeDivName)
SET @Sid = (SELECT SportID
        FROM SPORT
        WHERE SportName = @SportName)
SET @TID = (SELECT TeamID
        FROM TEAM
        WHERE TeamName = @TeamName)
SET @RID = (SELECT RegionID
        FROM REGION
        WHERE RegionName = @RegionName)
BEGIN TRAN t1
INSERT INTO COLLEGE(CollegeID, CollegeName, CollegeDivisionID, SportID, TeamID, RegionID)
VALUES (@CID, @CDIV, @Sid, @TID, @RID)
IF @@ERROR <> 0
    ROLLBACK TRAN T1
ELSE
    COMMIT TRAN T1

--Logan Marek
/* Stored Procedure #1: Creates a new doctor and inserts into the table treatment_doctor as well */

CREATE PROCEDURE uspdocdoctreatment
@DoctorfName varchar(50),
@DoctorlName varchar(50),
@TreatmentDate date,
@TreatmentName varchar(40)

AS

BEGIN TRAN T1

--Inserts into the doctor table
  INSERT INTO DOCTOR(DoctorfName,DoctorlName) VALUES (@DoctorfName, @DoctorlName)
  DECLARE @DoctorID INT

  --gets the doctor id from the table
  SET @DoctorID = SCOPE_IDENTITY()
  DECLARE @TreatmentID INT
  SET @TreatmentID = (SELECT T.TreatmentID FROM TREATMENT T WHERE @TreatmentName = T.TreatmentName)
--gets the values into the TREATMENT_DOCTOR table
  INSERT INTO TREATMENT_DOCTOR(DoctorID, TreatmentID, TreatmentDate) VALUES (@DoctorID, @TreatmentID, @TreatmentDate)
--minimal error control
  IF @@ERROR <> 0
    ROLLBACK TRAN T1

  ELSE
    COMMIT TRAN T1

GO

/* Stored Procedure #2: Inserts into the injury_type table */

CREATE PROCEDURE usp_injury_type
@InjuryTypeName varchar(50),
@InjuryTypeDescription varchar(60)

AS

BEGIN TRAN T1

INSERT INTO INJURY_TYPE (InjuryTypeName, InjuryTypeDescription) VALUES (@InjuryTypeName, @InjuryTypeDescription)

IF @@ERROR <> 0
  ROLLBACK TRAN T1
ELSE
  COMMIT TRAN T1

GO

-- Kevin Huynh
/* Stored Procedure #1: Adds a new player into an exisiting position */

CREATE PROCEDURE usp_NewPlayer
@PlayerFname varchar(50),
@PlayerLname varchar(50),
@BirthDate DATE,
@Gender varchar(10),
@DateAssigned DATE,
@PositionName varchar(100)

AS

DECLARE @PosID INT
SET @PosID = (SELECT PositionID FROM POSITION WHERE PositionName = @PositionName)

BEGIN TRAN T1
INSERT INTO PLAYER (PlayerFname, PlayerLname, BirthDate, Gender)
VALUES (@PlayerFname, @PlayerLname, @BirthDate, @Gender)

DECLARE @PID INT = (SELECT SCOPE_IDENTITY())

INSERT INTO PLAYER_POSITION (PlayerID, PositionID, DateAssigned)
VALUES (@PID, @PosID, @DateAssigned)
IF @@ERROR <> 0
	ROLLBACK TRAN T1
ELSE 
	COMMIT TRAN T1
GO

/* Stored Procedure #2: Adds a new doctor and a new treatment */

CREATE PROCEDURE usp_NewDoctorTreatment
@DoctorFname varchar(100),
@DoctorLname varchar(100),
@TreatmentName varchar(100),
@TreatmentDesc varchar(100)

AS

DECLARE @DID INT
DECLARE @TID INT

BEGIN TRAN T1
INSERT INTO DOCTOR(DoctorFname, DoctorLname)
VALUES(@DoctorFname, @DoctorLname)

SET @DID = (SELECT SCOPE_IDENTITY())

INSERT INTO TREATMENT(TreatmentName, TreatmentDesc)
VALUES(@TreatmentName, TreatmentDesc)

SET @TID = (SELECT SCOPE_IDENTITY())

INSERT INTO DOCTOR_TREATMENT(DoctorID, TreatmentID, TreatmentDate)
VALUES(@DID, @TID, GETDATE())
IF @@ERROR <> 0 
	ROLLBACK TRAN T1
ELSE
	COMMIT TRAN T1
GO

--Nikhila Iyer
/* Stored Procedure #1: Creates a new team for an existing sport */

CREATE PROCEDURE usp_NewTeam
@TeamName VARCHAR(75)
@TeamDescription VARCHAR(200)
@SportName VARCHAR(50)
AS

DECLARE @T_ID INT = (SELECT TeamID
		     FROM TEAM T
		     WHERE TeamName = @TeamName)
DECLARE @S_ID INT = (SELECT SportID
		     FROM SPORT S
		     WHERE SportName = @SportName)

BEGIN TRAN T1
INSERT INTO (TeamName, TeamDescription, SportName)
VALUES (@T_ID, @TeamDescription, @S_ID)
END

IF @@ERROR <> 0 
	ROLLBACK TRAN T1
ELSE
	COMMIT TRAN T1
GO

--Nikhila Iyer
/* Stored Procedure #2: Creates a new injury for an existing player */

CREATE PROCEDURE usp_NewInjury
@InjuryName
@InjuryTypeName
@TreatmentName
AS

DECLARE @I_ID INT = (SELECT InjuryID
		     FROM INJURY I
		     WHERE InjuryName = @InjuryName)
DECLARE @ITY_ID INT = (SELECT InjuryTypeID
		       FROM INJURY_TYPE ITY
		       WHERE InjuryTypeName = @InjuryTypeName)
DECLARE @T_ID INT = (SELECT TreatmentID
		     FROM INJURY_TREATMENT IT
		     	JOIN TREATMENT T ON IT.TreatmentID = T.TreatmentID 
		     WHERE TreatmentName = @TreatmentName)

BEGIN TRAN T1
INSERT INTO (InjuryName, InjuryTypeName, TreatmentName)
VALUES (@I_ID, @ITY_ID, @T_ID)
END

IF @@ERROR <> 0 
	ROLLBACK TRAN T1
ELSE
	COMMIT TRAN T1
GO
